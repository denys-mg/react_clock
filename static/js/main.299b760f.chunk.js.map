{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["truncateDateToTime","date","toUTCString","slice","Clock","state","today","Date","dateTimer","this","window","setInterval","setState","console","info","clearInterval","clockName","props","name","className","React","Component","getRandomName","value","now","toString","App","hasClock","nameTimer","handleRightClick","event","preventDefault","handleLeftClick","document","addEventListener","_prevProps","prevState","prevClockName","currClockName","debug","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAIA,SAASA,EAAmBC,GAC1B,OAAOA,EAAKC,cAAcC,OAAO,IAAK,GAWjC,IAAMC,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIC,MAFf,EAKEC,UAAY,EALd,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,UAAYE,OAAOC,aAAY,WAClC,EAAKC,SAAS,CACZN,MAAO,IAAIC,OAIbM,QAAQC,KAAKd,EAAmB,EAAKK,MAAMC,UA5B1B,OAcvB,kCAkBE,WACEI,OAAOK,cAAcN,KAAKD,aAnB9B,oBAsBE,WACE,IAAcQ,EAAcP,KAAKQ,MAAzBC,KACAZ,EAAUG,KAAKJ,MAAfC,MAER,OACE,sBAAKa,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGH,IAGF,YAED,sBAAMG,UAAU,cAAhB,SACGnB,EAAmBM,YAnC9B,GAA2Bc,IAAMC,WCVjC,SAASC,IACP,IAAMC,EAAQhB,KAAKiB,MAAMC,WAAWtB,OAAO,GAE3C,MAAM,SAAN,OAAgBoB,GAUX,IAAMG,EAAb,4MACErB,MAAe,CACbW,UAAW,UACXW,UAAU,GAHd,EAMEC,UAAY,EANd,EAwCEC,iBAAmB,SAACC,GAClBA,EAAMC,iBAEN,EAAKnB,SAAS,CACZe,UAAU,KA5ChB,EAgDEK,gBAAkB,WAChB,EAAKpB,SAAS,CACZe,UAAU,KAlDhB,uDAQE,WAA2B,IAAD,OACxBlB,KAAKmB,UAAYlB,OAAOC,aAAY,WAClC,EAAKC,SAAS,CACZI,UAAWM,QA1BI,MA8BnBW,SAASC,iBAAiB,cAAezB,KAAKoB,kBAC9CI,SAASC,iBAAiB,QAASzB,KAAKuB,mBAhB5C,gCAmBE,SAAmBG,EAA6BC,GAC9C,GAAK3B,KAAKJ,MAAMsB,SAAhB,CAIA,IAAMU,EAAgBD,EAAUpB,UAC1BsB,EAAgB7B,KAAKJ,MAAMW,UAE7BqB,IAAkBC,GAEpBzB,QAAQ0B,MAAR,uBAA8BF,EAA9B,eAAkDC,OA7BxD,kCAiCE,WACE5B,OAAOK,cAAcN,KAAKmB,WAE1BK,SAASO,oBAAoB,cAAe/B,KAAKoB,kBACjDI,SAASO,oBAAoB,QAAS/B,KAAKuB,mBArC/C,oBAsDE,WACE,IAAQhB,EAAcP,KAAKJ,MAAnBW,UAER,OACE,sBAAKG,UAAU,MAAf,UACE,6CACCV,KAAKJ,MAAMsB,UACV,cAAC,EAAD,CAAOT,KAAMF,WA7DvB,GAAyBI,IAAMC,WChB/BoB,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.299b760f.chunk.js","sourcesContent":["import React from 'react';\n\nconst CHANGE_TIME_MS = 1000;\n\nfunction truncateDateToTime(date: Date): string {\n  return date.toUTCString().slice(-12, -4);\n}\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  today: Date,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    today: new Date(),\n  };\n\n  dateTimer = 0;\n\n  componentDidMount(): void {\n    this.dateTimer = window.setInterval(() => {\n      this.setState({\n        today: new Date(),\n      });\n\n      // eslint-disable-next-line no-console\n      console.info(truncateDateToTime(this.state.today));\n    }, CHANGE_TIME_MS);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.dateTimer);\n  }\n\n  render() {\n    const { name: clockName } = this.props;\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {truncateDateToTime(today)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nconst CHANGE_NAME_MS = 3300;\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype Props = {};\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nexport class App extends React.Component<Props, State> {\n  state: State = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  nameTimer = 0;\n\n  componentDidMount(): void {\n    this.nameTimer = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, CHANGE_NAME_MS);\n\n    document.addEventListener('contextmenu', this.handleRightClick);\n    document.addEventListener('click', this.handleLeftClick);\n  }\n\n  componentDidUpdate(_prevProps: Readonly<Props>, prevState: Readonly<State>) {\n    if (!this.state.hasClock) {\n      return;\n    }\n\n    const prevClockName = prevState.clockName;\n    const currClockName = this.state.clockName;\n\n    if (prevClockName !== currClockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevClockName} to ${currClockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.nameTimer);\n\n    document.removeEventListener('contextmenu', this.handleRightClick);\n    document.removeEventListener('click', this.handleLeftClick);\n  }\n\n  handleRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({\n      hasClock: false,\n    });\n  };\n\n  handleLeftClick = () => {\n    this.setState({\n      hasClock: true,\n    });\n  };\n\n  render() {\n    const { clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && (\n          <Clock name={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}